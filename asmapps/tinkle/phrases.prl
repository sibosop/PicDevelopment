print STDOUT "; WARNING\n",
	     "; DO NOT EDIT THIS FILE \n",
	     "; IT IS AUTOMATICALLY GENERATED BY A PERL SCRIPT\n";

$inphrase = 0;
$line = 0;
$phrasenum = 0;
$notenum = 0;
$note = "";
glob @ptbllow;
glob @ptblhigh;


while (<STDIN>)
{
	++$linenum;
	s/#.*//;                # removes comments
	next if ( /^\s*$/ );    #blank lines
	chomp;
	@line = split;
	if ( $inphrase ) {
		if ( $line[0] eq 'end' ) 
		{
			$ptbllow[$phrasenum] .= "\tretlw\teos\n";
			$ptblhigh[$phrasenum] .= "\tretlw\t0\n";
			$inphrase = 0;
			++$phrasenum;
			next;
		}
		@notes = split;
		die "parse error at $linenum" if ( @notes != 4 ) ;
		my $noteval;
		$_ = $notes[0];
		if ( /choose/ )
		{
			$note = "_$_";
		}
		elsif ( /^[A-Ga-g][1]*[+-]?$/ )
		{
			$note = "_" . substr($_,0,1);
			if ( /^.[1]/ )
			{
			  	$note = "($note + D'12')";  
			}

			if ( /^.[1]*[-]/ )
			{
				$note = "($note - 1)";
			}

			if ( /^.[1]*[+]/ )
			{
				$note = "($note + 1)";
			}
	#		print STDERR "got note $note\n";
		}
		else
		{
			die "parse error at $notes[0] line $linenum";
		}
		my $velval  = $notes[1];
		my $ltblval  = "((($velval & 0x7) << 5) |  (($note) & 0x1f))";
		my $onwait  = $notes[2];
		my $offwait = $notes[3];
		$ptbllow[$phrasenum] .= "\tretlw\t$ltblval\n"; 
		$ptblhigh[$phrasenum] .= "\tretlw\t(_$offwait << 4 ) | _$onwait\n";
	}

	if ( $line[0] eq 'preamble' ) {
		$prefile = $line[1];
		open PREFILE, "<$prefile" or die "can't open <$prefile>: $!";
		print STDOUT ";\n; Beginning of preamble file $prefile\n";
		while ( <PREFILE> ) {
			print STDOUT "$_";
		}
		print STDOUT ";\n; End of preamble file $prefile\n;\n\n";
		close PREFILE
	}

	if ( $line[0] eq 'phrase' )
	{
		$inphrase = 1;
		$notenum = 0;
		$ptbllow[$phrasenum] = phrasehdr($phrasenum,"low");
		$ptblhigh[$phrasenum] = phrasehdr($phrasenum,"high");
	}
}

print STDOUT "PROG1\tCODE\n";
print STDOUT "getphrasecount\n";
print STDOUT "\tglobal\tgetphrasecount\n";
print STDOUT "\tretlw\t$phrasenum\n";


print STDOUT "JUMPS8\tCODE\n";
print STDOUT jumpphrase("low");
print STDOUT jumpphrase("high");
for ( $i = 0; $i < $phrasenum; ++$i )
{
	print STDOUT "$ptbllow[$i]\n";
	print STDOUT "$ptblhigh[$i]\n";
}

print "\n\tEND\n";

sub jumpphrase
{
	my $pos = shift;
	my $rval = "jumpphrase$pos\n";
	$rval .= "\tglobal\tjumpphrase$pos\n";
	$rval .= "\tmovlw\thigh jumpphrase$pos\n";
	$rval .= "\tmovwf\tPCLATH\n";
	$rval .= "\tmovf\tphrasenum,w\n";
	$rval .= "\taddwf\tPCL,f\n";

	my $i;
	for ( $i = 0; $i < $phrasenum; ++$i )
	{
		$rval .= "\tgoto\tphrase$i$pos\n";
	}
	$rval .= "\n";
	return $rval;
}

sub phrasehdr
{
	my $pn = shift;
	my $pos = shift;
	my $name = "phrase" . "$pn" . $pos;

	my $rval = "$name\n";
	$rval .= "\tmovlw\thigh $name\n";
	$rval .= "\tmovwf\tPCLATH\n";
	$rval .= "\tmovf\tphraseptr,w\n";
	$rval .= "\taddwf\tPCL,f\n";

	return $rval;
}
